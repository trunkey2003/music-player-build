{"version":3,"sources":["components/Cd.js","components/Control.js","components/Progress.js","components/Header.js","components/ChangeList.js","components/SongWave.js","components/ChangeTheme.js","components/UserIcon.js","components/Dashboard.js","components/SongsModal.js","components/AddSong.js","components/Song.js","components/Playlist.js","components/Loading.js","components/Home.js","components/HomeUser.js","App.js","reportWebVitals.js","index.js"],"names":["Cd","props","classes","isPlaying","className","style","backgroundImage","image","Control","useState","classRandom","setClassRandom","classRepeat","setClassRepeat","useEffect","songState","activeRepeat","activeRandom","onClick","modifySongState","modifyActiveRepeat","modifySongPlay","songIndex","Math","round","random","songCount","modifyIsPlaying","modifyActiveRandom","Progress","percentage","modifyPercentage","modifyCurruntTime","duration","cdThumb","id","onChange","e","target","value","handleOnChangeProgress","type","step","min","max","Header","song","singer","ChangeList","src","setSrc","songRegion","alt","modifySongRegion","SongWave","ChangeTheme","modifyClassTheme","UserIcon","userIcon","Dashboard","validated","volumeIcon","volumeBackground","songDetail","songs","ModifySongVolume","length","undefined","classTheme","SongsModal","userDetail","addSongToDatabase","handleAddSong","artists","path","singers","username","userid","url","map","index","name","handleAddButton","songID","a","getSong","then","data","streamUrls","streamUrl","console","log","newSong","SongToDabase","Object","assign","songid","AddSong","valueRef","useRef","show","setShow","songsList","setSongsList","loading","setLoading","error","setError","handleClose","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","Modal","size","onHide","closeButton","Title","Body","ref","searchByKeyword","status","current","search","key","title","thumbnail","Spinner","animation","variant","Footer","Button","Song","classActive","classOption","setClassOption","showDownload","setShowDownload","showDelete","setShowDelete","handleCloseDownload","handleCloseDelete","handlePermanentlyDelte","catch","handleSoftDelte","toogleThreeDot","thumb","event","stopPropagation","href","download","objectid","Playlist","_id","Loading","Home","songVn","songUs","setSongRegion","setSongs","songAdded","setSongAdded","audioRef","setSongIndex","setCdThumb","setSong","setSinger","setIsPlaying","setDuration","setPercentage","setActiveRandom","setActiveRepeat","firstLoading","setFirstLoading","setClassTheme","volume","setVolume","setVolumeBackground","setVolumeIcon","func","next","finally","setTimeManually","play","pause","isForced","modifySinger","modifySrc","modifyCdThumb","param","currentTime","newSongs","push","alert","region","onTimeUpdate","_percentage","updateTime","onLoadedData","currentTarget","splice","useParams","setUserIcon","avatar","App","exact","element","HomeUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f3f6fa1.chunk.js","sourcesContent":["export default function Cd(props) { \r\n    let classes;\r\n\r\n    if (props.isPlaying)  classes = \"cd-thumb spin\"; else{\r\n        classes = \"cd-thumb\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"cd\">\r\n            <div className={classes} style={{ backgroundImage: `url('${props.image}')` }}>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useEffect, useState} from 'react';\r\n\r\nexport default function Control(props) {\r\n    const [classRandom, setClassRandom] = useState(\"btn btn-random\");\r\n    const [classRepeat, setClassRepeat] = useState(\"btn btn-repeat\");\r\n\r\n    useEffect(() =>{\r\n        (props.songState.activeRepeat)? setClassRepeat(\"btn btn-repeat active\") : setClassRepeat(\"btn btn-repeat\");\r\n        (props.songState.activeRandom)? setClassRandom(\"btn btn-random active\") : setClassRandom(\"btn btn-random\");\r\n    }, [props.songState.activeRepeat, props.songState.activeRandom])\r\n    const handleOnClickBtnPrev = () => {\r\n        if (props.songState.activeRepeat){\r\n            props.modifySongPlay(props.songIndex);\r\n            return;\r\n        }\r\n        if (props.songState.activeRandom){ \r\n            props.modifySongPlay(Math.round(Math.random()*props.songCount-1));\r\n            return;\r\n        } \r\n        if (props.songIndex === 0){\r\n            props.modifySongPlay(props.songCount-1);\r\n        } else {\r\n            props.modifySongPlay(props.songIndex-1);\r\n        }\r\n    }\r\n\r\n    const handleOnClickBtnNext = () => {\r\n        if (props.songState.activeRepeat){\r\n            props.modifySongPlay(props.songIndex);\r\n            return;\r\n        }\r\n        if (props.songState.activeRandom){\r\n            props.modifySongPlay(Math.round(Math.random()*props.songCount-1));\r\n        } else{\r\n        if (props.songIndex === props.songCount-1){\r\n            props.modifySongPlay(0);\r\n        } else {\r\n            props.modifySongPlay(props.songIndex+1);\r\n        }\r\n        }\r\n    }\r\n\r\n    const handleOnClickBtnRepeat = () => {\r\n        props.modifySongState.modifyActiveRepeat(!props.songState.activeRepeat);\r\n       \r\n    }\r\n\r\n    const handleOnClickBtnRandom = () =>{\r\n        props.modifySongState.modifyActiveRandom(!props.songState.activeRandom);\r\n    }\r\n\r\n    const handleOnClickBtnTogglePlay = () => {\r\n        props.modifyIsPlaying(props.isPlaying)\r\n    }\r\n\r\n    return (\r\n        <div className=\"control\">\r\n            <div className={classRepeat} onClick={handleOnClickBtnRepeat}>\r\n                <i className=\"fas fa-redo\"></i>\r\n            </div>\r\n\r\n            <div className=\"btn btn-prev\" onClick={() => {handleOnClickBtnPrev()}}>\r\n                <i className=\"fas fa-step-backward\"></i>\r\n            </div>\r\n\r\n            <div className=\"btn btn-toggle-play\" onClick={() => {handleOnClickBtnTogglePlay()}}>\r\n                <i className=\"fas fa-pause icon-pause\"></i>\r\n                <i className=\"fas fa-play icon-play\"></i>\r\n            </div>\r\n\r\n            <div className=\"btn btn-next\" onClick={() => {handleOnClickBtnNext()}}>\r\n                <i className=\"fas fa-step-forward\"></i>\r\n            </div>\r\n\r\n            <div className={classRandom} onClick={handleOnClickBtnRandom}>\r\n                <i className=\"fas fa-random\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default function Progress({percentage, modifyPercentage, modifyCurruntTime, duration, cdThumb}) {\r\n    const handleOnChangeProgress = (e) =>{\r\n        modifyPercentage(e.target.value);\r\n        modifyCurruntTime(duration*e.target.value/100);\r\n    }\r\n    return (\r\n        <input id=\"progress\" onChange={(e) => {handleOnChangeProgress(e)}} className=\"progress\" type=\"range\" step=\"1\" min=\"0\" max=\"100\" style={{backgroundImage : `url(${cdThumb})`}}value={(percentage)? percentage : \"50\"}></input>\r\n    )\r\n}","export default function Header(props) {\r\n  return (\r\n    <header>\r\n      <h4>Now playing:</h4>\r\n      <h2>{props.song}</h2>\r\n      <h3>{props.singer}</h3>\r\n    </header>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function ChangeList(props) {\r\n    const [src, setSrc] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n        if (props.songRegion === \"usuk\") setSrc(\"https://trunkey2003.github.io/img/us.png\"); else setSrc(\"https://trunkey2003.github.io/img/vn.png\");\r\n    }, [props.songRegion])\r\n\r\n    const handleOnClickChangeListBtn = () =>{\r\n        if (props.songRegion === \"usuk\") {\r\n            props.modifySongRegion(\"vn\"); \r\n        } else{\r\n            props.modifySongRegion(\"usuk\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img id=\"change-list-btn\" src={src} alt={props.songRegion} onClick={() => {handleOnClickChangeListBtn()}} />\r\n        </div>\r\n    )\r\n}","export default function SongWave(props) {\r\n    let classes;\r\n\r\n    if (props.isPlaying) {\r\n        classes = \"song-wave song-wave-active\";\r\n      } else {\r\n        classes = \"song-wave\";\r\n      }\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    );\r\n}\r\n","export default function ChangeTheme(props) {\r\n    function handleChangeThemeBtnOnClick() {\r\n        props.modifyClassTheme();\r\n    }\r\n\r\n    return (\r\n        <i className=\"fas fa-paint-roller change-theme-btn\" onClick={() => {handleChangeThemeBtnOnClick()}}></i>\r\n    )\r\n}","export default function UserIcon(props){\r\n    return (\r\n        <div>\r\n            <img className=\"user-icon\" src={props.userIcon} alt=\"user-icon\"/>\r\n        </div>\r\n    )\r\n}","import Cd from './Cd'\r\nimport Control from './Control'\r\nimport Progress from './Progress'\r\nimport Header from './Header'\r\nimport ChangeList from './ChangeList'\r\nimport SongWave from './SongWave'\r\n\r\nimport { useEffect } from 'react'\r\nimport ChangeTheme from './ChangeTheme'\r\nimport UserIcon from './UserIcon'\r\n\r\nexport default function Dashboard({validated, userIcon ,songState ,volumeIcon, volumeBackground, modifyClassTheme, modifySongRegion, songDetail, modifySongPlay, modifyIsPlaying, percentage, modifyPercentage, modifyCurruntTime, songCount, modifySongState, songs, ModifySongVolume}) {\r\n    useEffect(()=>{\r\n        if (songs.length !== 0) modifySongPlay(songDetail.songIndex,true);\r\n    }, [songCount])\r\n    return (\r\n        <div key={`${songDetail.songRegion} ${songDetail.classTheme}`} className=\"dashboard\">\r\n            <div className=\"volume-container\"><div className={volumeBackground}></div><i className={`${volumeIcon} volume-icon`} onClick={() => {ModifySongVolume()}}/></div>\r\n            <SongWave isPlaying={songDetail.isPlaying}/>\r\n            <ChangeTheme modifyClassTheme={modifyClassTheme}/>\r\n            {(validated)? <UserIcon userIcon={userIcon}/> : ((validated === undefined)? <ChangeList songRegion={songDetail.songRegion} modifySongRegion={modifySongRegion}></ChangeList> : <UserIcon userIcon={userIcon}/>)}\r\n            <Header song={songDetail.song} singer={songDetail.singer} />\r\n            <Cd image={songDetail.cdThumb} isPlaying={songDetail.isPlaying} modifyIsPlaying={modifyIsPlaying} />\r\n            <Control songState={songState} modifySongState={modifySongState} songCount={songCount} songIndex={songDetail.songIndex} isPlaying={songDetail.isPlaying} modifySongPlay={modifySongPlay} modifyIsPlaying={modifyIsPlaying} />\r\n            <Progress cdThumb={songDetail.cdThumb} duration={songDetail.duration} percentage={percentage} modifyPercentage={modifyPercentage} modifyCurruntTime={modifyCurruntTime} />\r\n        </div>\r\n    )\r\n}","import {\r\n    getSong,\r\n} from \"nhaccuatui-api-full\";\r\n\r\nexport default function SongsModal({userDetail,addSongToDatabase, handleAddSong, song, artists, image, path, id}) {\r\n    var singers = \"\";\r\n    const username = userDetail.username;\r\n    const userid = userDetail.userid;\r\n    let url = `https://api-trunkeymusicplayer.herokuapp.com/api/user/${username}/songs`;\r\n    image = (image)? image : \"https://i1.sndcdn.com/avatars-000606604806-j6ghpm-t500x500.jpg\";\r\n    if (artists) {artists.map((singer, index) => {\r\n        singers = singers + singer.name;\r\n        if (artists.length-1 != index) singers = singers + \" - \";\r\n    })}\r\n\r\n    const handleAddButton = async (songID) =>{\r\n        await getSong(songID).then((data) => path = data.song.streamUrls[0].streamUrl);\r\n        console.log(path);\r\n        let newSong = {\r\n            name: song,\r\n            singer: singers,\r\n            path: path,\r\n            image: image,\r\n        }\r\n        let SongToDabase = Object.assign(newSong, {username: username, userid : userid, songid: songID});\r\n        await addSongToDatabase(url, SongToDabase).then((data) => {console.log(data);})\r\n        await handleAddSong(newSong);\r\n    }\r\n    return(\r\n        <div className=\"songs-modal\">\r\n            <div className=\"songs-modal-img\">\r\n                <img alt=\"hello\" src={image}></img>\r\n            </div>\r\n            <div className=\"songs-modal-detail\">\r\n                <h5 className=\"songs-modal-detail-song\">{song}</h5>\r\n                <h4 className=\"songs-modal-detail-singger\">{singers}</h4>\r\n                <button onClick={() => {handleAddButton(id)}} className=\"song-modal-detail-button custom-download-btn\">Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useRef, useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport {\r\n  searchByKeyword,\r\n} from \"nhaccuatui-api-full\";\r\nimport SongsModal from './SongsModal';\r\n\r\nexport default function AddSong(props) {\r\n  const valueRef = useRef();\r\n  const [show, setShow] = useState(false);\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false)\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleInputOnchange = (value) => {\r\n    if (!value) return;\r\n    setLoading(true);\r\n    searchByKeyword(value).then((data) => {\r\n      if (data.status == 'success') { if (valueRef.current.value === value) setSongsList(data.search.song.song); setLoading(false); setError(false); }\r\n      else if (data.status == 'error') {\r\n        console.log(\"Error search\");\r\n        setError(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  async function addSongToDatabase(url = '', data = {}) {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors', \r\n      cache: 'no-cache', \r\n      credentials: 'same-origin', \r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer', \r\n      body: JSON.stringify(data) \r\n    });\r\n    return response.json(); \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-song-section\" onClick={handleShow}>\r\n        Add your own song\r\n      </div>\r\n      <Modal size=\"lg\" className=\"custom-modal-01\" show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add your song to the playlist</Modal.Title>\r\n          <button type=\"button\" className=\"custom-btn-close-modal\" onClick={handleClose} aria-label=\"Close\"><i className=\"fas fa-times\"></i></button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h2 className=\"text-center\">Search song</h2>\r\n          <input ref={valueRef} onChange={(e) => { handleInputOnchange(e.target.value); }} className=\"search-song-input\"></input>\r\n          <div className=\"songs-modal-container\">\r\n            {(!error) ? <>{((songsList) ? ((loading == false) ? songsList.map((song, index) => {\r\n              return (\r\n                <SongsModal userDetail={props.userDetail} addSongToDatabase={addSongToDatabase} modifySongPlay={props.modifySongPlay} songs={props.songs} handleAddSong={props.handleAddSong} id={song.key} song={song.title} artists={song.artists} image={song.thumbnail}></SongsModal>\r\n              )\r\n            }) : <div className=\"songs-modal-loading\"><h4>Loading <Spinner animation=\"border\" className=\"spinner\" variant=\"info\" /></h4></div>) : \"\")}</> : <div className=\"error\"><img src=\"https://firebasestorage.googleapis.com/v0/b/trunkey-music-player.appspot.com/o/error.jpg?alt=media&token=8411cc5c-4456-489d-b0a1-3eb129ddd564\"></img></div>}\r\n          </div>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" className=\"custom-close-btn\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" className=\"custom-download-btn\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}","import { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\n\r\nexport default function Song(props) {\r\n    let classActive = \"song\";\r\n    const [classOption, setClassOption] = useState(\"option-songs-btn\");\r\n    const [showDownload, setShowDownload] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n\r\n    const handleCloseDownload = () => setShowDownload(false);\r\n    const handleShowDownload = () => setShowDownload(true);\r\n\r\n    const handleCloseDelete = () => setShowDelete(false);\r\n    const handleShowDelete = () => setShowDelete(true);\r\n\r\n    const modifySongPlay = (index) => {\r\n        props.modifySongPlay(index, true);\r\n        props.modifyIsPlaying(false);\r\n    }\r\n\r\n    const handlePermanentlyDelte = async (id, username, index, songid) => {\r\n        const url = (songid)? `https://api-trunkeymusicplayer.herokuapp.com/api/user/${username}/songid/${songid}` : `https://api-trunkeymusicplayer.herokuapp.com/api/user/${username}/songs/${id}`;\r\n\r\n        console.log(props);\r\n        \r\n        await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({songid : props.songid})\r\n          })\r\n        .then((data) => console.log(data))\r\n        .catch(() => console.log(\"Err\"));\r\n\r\n        props.handleSoftDelte(index);\r\n    }\r\n\r\n    if (props.songIndex === props.index) {\r\n        classActive = \"song active\"\r\n    }\r\n\r\n    const toogleThreeDot = () => (classOption === \"option-songs-btn\") ? setClassOption(\"option-songs-btn show-option-songs\") : setClassOption(\"option-songs-btn\");\r\n\r\n    return (\r\n        <div className={classActive} id={`song-${props.index}`} onClick={() => { modifySongPlay(props.index) }}>\r\n            <div className=\"thumb\" style={{ backgroundImage: `url('${props.thumb}')` }}>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <h3 className=\"title\">{props.title}</h3>\r\n                <p className=\"author\">{props.singer}</p>\r\n            </div>\r\n\r\n            <div className=\"option\" onClick={(event) => { event.stopPropagation() }}>\r\n                <i className=\"fas fa-ellipsis-h three-dot\" onClick={() => {toogleThreeDot()}}></i>\r\n                <div className={classOption}>\r\n                    <button onClick={handleShowDownload}>Download <i className=\"fas fa-download\"></i></button>\r\n                    <button onClick={handleShowDelete} >{(props.validated)? `Delete` : `Soft delete`} <i className=\"fas fa-trash\"></i></button>\r\n                </div>\r\n\r\n                <Modal className=\"custom-modal-01\" show={showDownload} onHide={handleCloseDownload}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Download {props.title}</Modal.Title>\r\n                        <button type=\"button\" className=\"custom-btn-close-modal\" onClick={handleCloseDownload} aria-label=\"Close\"><i className=\"fas fa-times\"></i></button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to download this song ?\r\n                        <div className=\"thumbnail\">\r\n                            <img alt={props.title} src={props.thumb} className=\"thumbnail-img\"></img>\r\n                            <div className=\"thumbnail-content\">\r\n                            <h5><b>Song</b> : {props.title}</h5>\r\n                            <h5><b>by</b> {props.singer}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" className=\"custom-close-btn\" onClick={handleCloseDownload}>\r\n                            Close\r\n                        </Button>\r\n                        <Button className=\"custom-download-btn\" href={props.src} download>\r\n                            Download <i className=\"fas fa-download\"></i>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal className=\"custom-modal-01 darkTheme\" show={showDelete} onHide={handleCloseDelete}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Remove {props.title} </Modal.Title>\r\n                        <button type=\"button\" className=\"custom-btn-close-modal\" aria-label=\"Close\" onClick={handleCloseDelete}><i className=\"fas fa-times\"></i></button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to remove this song from your list ? <br/> <span className=\"custom-text-note\">{(props.validated)? \"\" : `Note that this song won't be deleted permanently from my database :)`}</span>\r\n                        <div className=\"thumbnail\">\r\n                            <img alt={props.title} src={props.thumb} className=\"thumbnail-img\"></img>\r\n                            <div className=\"thumbnail-content\">\r\n                            <h5><b>Song</b> : {props.title}</h5>\r\n                            <h5><b>by</b> {props.singer}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" className=\"custom-close-btn\" onClick={handleCloseDelete}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"danger\" className=\"custom-delete-btn\" onClick={() => {\r\n                            if (props.validated){\r\n                                handlePermanentlyDelte(props.objectid, props.username, props.index, props.songid);\r\n                            }else{\r\n                                props.handleSoftDelte(props.index); toogleThreeDot(); handleCloseDelete();\r\n                            }\r\n                        }}>\r\n                            Delete <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import AddSong from './AddSong'\r\nimport Song from './Song'\r\n\r\nexport default function Playlist(props) {\r\n    return (\r\n        <div key={props.songRegion + \" \" + props.classTheme} className=\"playlist\">\r\n            {((props.validated && props.songs) ?\r\n                (\r\n                    <>\r\n                        {props.songs.map((song, index) => {\r\n                            return (\r\n                                <Song songid={song.songid} username={props.userDetail.username} objectid={song._id} validated={props.validated} handleSoftDelte={props.handleSoftDelte} thumb={song.image} title={song.name} src={song.path} singer={song.singer} songIndex={props.songIndex} index={index} key={index} modifySongPlay={props.modifySongPlay} modifyIsPlaying={props.modifyIsPlaying} />\r\n                            )\r\n                        })}\r\n                        <AddSong userDetail={props.userDetail} modifySongPlay={props.modifySongPlay} songs={props.songs} handleAddSong={props.handleAddSong} />\r\n                    </>\r\n                )\r\n                :\r\n                <>\r\n                    {props.songs.map((song, index) => {\r\n                        return (\r\n                            <Song objectid={song._id} validated={props.validated} handleSoftDelte={props.handleSoftDelte} thumb={song.image} title={song.name} src={song.path} singer={song.singer} songIndex={props.songIndex} index={index} key={index} modifySongPlay={props.modifySongPlay} modifyIsPlaying={props.modifyIsPlaying} />\r\n                        )\r\n                    })}\r\n                </>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}","import Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"Loading\">\r\n            <h1>Loading songs from database <Spinner animation=\"border\" variant=\"danger\" /></h1>\r\n        </div>\r\n    )\r\n}","import '../css/App.css';\nimport Dashboard from './Dashboard';\nimport Playlist from './Playlist';\nimport { useState, useRef, useEffect } from 'react';\nimport Loading from './Loading';\n\n\nfunction Home({path}) {\n  const songVn = useRef();\n  const songUs = useRef();\n  const [songRegion, setSongRegion] = useState(\"usuk\");\n  const [songs, setSongs] = useState([]);\n  const [songAdded, setSongAdded] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const audioRef = useRef();\n  const [songIndex, setSongIndex] = useState(0);\n  const [src, setSrc] = useState(\"\");\n  const [cdThumb, setCdThumb] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [singer, setSinger] = useState(\"\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [activeRandom, setActiveRandom] = useState(false);\n  const [activeRepeat, setActiveRepeat] = useState(false);\n  const [firstLoading, setFirstLoading] = useState(true);\n  const [classTheme, setClassTheme] = useState(\"defualt-theme\");\n  const [volume, setVolume] = useState(1);\n  const [volumeBackground, setVolumeBackground] = useState(\"volume-background\");\n  const [volumeIcon, setVolumeIcon] = useState(\"fas fa-volume-up\");\n\n  const songDetail = {\n    src,\n    cdThumb,\n    song,\n    singer,\n    isPlaying,\n    songIndex,\n    duration,\n    classTheme,\n    songRegion,\n  }\n\n  useEffect(() => {\n    const func = async () => {\n      if (firstLoading) {\n        setLoading(true);\n        await fetch(`${path}/admin/us`)\n          .then((response) => response.json())\n          .then((data) => {\n            songUs.current = data;\n          })\n          .catch((next) => console.log(next));\n\n        await fetch(`${path}/admin/vn`)\n          .then((response) => response.json())\n          .then((data) => {\n            songVn.current = data;\n          })\n          .catch((next) => console.log(next))\n          .finally(() => { setLoading(false); setFirstLoading(false); })\n        const songs = (songRegion === \"usuk\") ? songUs.current : songVn.current;\n        setSongs(songs);\n        setCdThumb(songs[0].image);\n        setSong(songs[0].name);\n        setSinger(songs[0].singer);\n        setSrc(songs[0].path);\n        setSongIndex(0);\n        setTimeManually(0);\n        setPercentage(0);\n      } else {\n        let songs;\n        if (songs && songRegion === \"usuk\") songUs.current = songs;\n        if (songs && songRegion === \"vn\") songVn.current = songs;\n        songs = (songRegion === \"usuk\") ? songUs.current : songVn.current;\n        setSongs(songs);\n        setCdThumb(songs[0].image);\n        setSong(songs[0].name);\n        setSinger(songs[0].singer);\n        setSrc(songs[0].path);\n      }\n    }\n\n    func();\n  }, [songRegion, firstLoading])\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n    }\n  }, [volume, audioRef.current])\n\n\n  let classes;\n\n  const play = () => {\n    const audio = audioRef.current;\n    audio.play();\n  }\n\n  const pause = () => {\n    const audio = audioRef.current;\n    audio.pause();\n  }\n\n  if (isPlaying && audioRef.current) {\n    classes = \"player playing\";\n    play();\n  } else if (audioRef.current) {\n    classes = \"player\";\n    pause();\n  } else {\n    classes = \"player\";\n  }\n\n  const modifySrc = function (url) {\n    setSrc(url);\n  }\n\n  const modifyActiveRandom = function (param) {\n    setActiveRandom(param);\n  }\n\n  const modifyActiveRepeat = function (param) {\n    setActiveRepeat(param);\n  }\n\n  const modifyCdThumb = function (url) {\n    setCdThumb(url);\n  }\n\n  const modifySong = function (url) {\n    setSong(url);\n  }\n\n  const modifySinger = function (url) {\n    setSinger(url);\n  }\n\n  const modifyIsPlaying = function (isPlaying) {\n    setIsPlaying(!isPlaying);\n  }\n\n  const modifyPercentage = function (percentage) {\n    setPercentage(percentage);\n  }\n\n  const modifySongRegion = function (region) {\n    setSongIndex(0);\n    setSongRegion(region);\n  }\n\n  const modifySongPlay = function (index, isForced) {\n    if (songs) {\n      if (!isForced) {\n        if (activeRandom) {\n          index = Math.round(Math.random() * songs.length);\n        }\n        if (activeRepeat) {\n          index = songIndex;\n        }\n      }\n      if (songs[index]){\n      setSongIndex(index);\n      setTimeManually(0);\n      setPercentage(0);\n      modifySong(songs[index].name);\n      modifySinger(songs[index].singer);\n      modifySrc(songs[index].path);\n      modifyCdThumb(songs[index].image);\n      }\n    }\n  }\n\n  const modifySongState = {\n    modifyActiveRandom,\n    modifyActiveRepeat,\n  }\n\n  const songState = {\n    activeRandom,\n    activeRepeat\n  }\n\n  const modifyClassTheme = () => {\n    (classTheme === \"defualt-theme\") ? setClassTheme(\"custom-theme-01\") : ((classTheme === \"custom-theme-01\") ? setClassTheme(\"custom-theme-02\") : ((classTheme === \"custom-theme-02\") ? setClassTheme(\"custom-theme-03\") : setClassTheme(\"defualt-theme\")));\n  }\n\n  const updateTime = (e) => {\n    const _percentage = e.target.currentTime / duration * 100;\n    setPercentage(_percentage);\n    if (percentage === 100) {\n      if (songIndex === songs.length - 1)\n        modifySongPlay(0); else modifySongPlay(songIndex + 1);\n    }\n  }\n\n  const setTimeManually = (e) => {\n    audioRef.current.currentTime = e;\n  }\n\n  const handleSoftDelte = (index) => {\n    let newSongs = [...songs];\n    newSongs.splice(index, 1);\n    setSongs(newSongs);\n  }\n\n  const handleAddSong = (song) => {\n    let newSongs = [...songs];\n    newSongs.push(song);\n    setSongs(newSongs);\n    setSongAdded(true);\n  }\n\n  useEffect(() =>{\n    if (songAdded){\n      modifySongPlay(songs.length-1, true);\n      setSongAdded(false);\n    }\n  }, [handleAddSong, songAdded])\n\n  const handleOnChangeVolume = (e) => {\n    setVolume(e.target.value);\n  }\n\n  const ModifySongVolume = (e) => {\n    switch (volume) {\n      case 0:\n        setVolume(0.4);\n        setVolumeBackground(\"volume-background-02\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.4:\n        setVolume(0.65);\n        setVolumeBackground(\"volume-background-03\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.65:\n        setVolume(0.8);\n        setVolumeBackground(\"volume-background-04\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.8:\n        setVolume(1);\n        setVolumeBackground(\"volume-background\");\n        setVolumeIcon(\"fas fa-volume-up\");\n        break;\n      case 1:\n        setVolume(0);\n        setVolumeBackground(\"volume-background-01\");\n        setVolumeIcon(\"fas fa-volume-mute\");\n        break;\n      default: alert(\"Sound Volume error\");\n    }\n  }\n\n  return (\n    <div className={`${classes} ${classTheme}`}>\n      {(loading === true) ? <Loading /> : (<>\n        <Dashboard songState={songState} volumeIcon={volumeIcon} volumeBackground={volumeBackground} ModifySongVolume={ModifySongVolume} modifyClassTheme={modifyClassTheme} modifySongRegion={modifySongRegion} modifySongState={modifySongState} songCount={songs.length} songDetail={songDetail} modifyIsPlaying={modifyIsPlaying} modifySongPlay={modifySongPlay} percentage={percentage} modifyPercentage={modifyPercentage} modifyCurruntTime={setTimeManually} songs={songs} />\n        <audio ref={audioRef} id=\"audio\" onTimeUpdate={(e) => updateTime(e)} src={src} onLoadedData={(e) => { setDuration(e.currentTarget.duration); }}></audio>\n        <Playlist classTheme={classTheme} songRegion={songRegion} handleSoftDelte={handleSoftDelte} songIndex={songIndex} src={src} modifySongPlay={modifySongPlay} modifyIsPlaying={modifyIsPlaying} songs={songs} handleAddSong={handleAddSong}/>\n      </>)}\n    </div>\n  );\n}\n\nexport default Home;\n","import '../css/App.css';\nimport Dashboard from './Dashboard';\nimport Playlist from './Playlist';\nimport { useState, useRef, useEffect } from 'react';\nimport {useParams} from 'react-router-dom';\nimport Loading from './Loading';\n\n\nfunction Home({path}) {\n  var {username} = useParams();\n  const validated = useRef();\n  const userDetail = useRef();\n  const [userIcon, setUserIcon] = useState(\"https://trunkey2003.github.io/general-img/default-profile-pic.jpg\");\n  const [songRegion, setSongRegion] = useState(\"usuk\");\n  const [songs, setSongs] = useState([]);\n  const [songAdded, setSongAdded] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const audioRef = useRef();\n  const [songIndex, setSongIndex] = useState(0);\n  const [src, setSrc] = useState(\"\");\n  const [cdThumb, setCdThumb] = useState(\"\");\n  const [song, setSong] = useState(\"Song\");\n  const [singer, setSinger] = useState(\"Singer\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [activeRandom, setActiveRandom] = useState(false);\n  const [activeRepeat, setActiveRepeat] = useState(false);\n  const [firstLoading, setFirstLoading] = useState(true);\n  const [classTheme, setClassTheme] = useState(\"defualt-theme\");\n  const [volume, setVolume] = useState(1);\n  const [volumeBackground, setVolumeBackground] = useState(\"volume-background\");\n  const [volumeIcon, setVolumeIcon] = useState(\"fas fa-volume-up\");\n\n\n  const songDetail = {\n    src,\n    cdThumb,\n    song,\n    singer,\n    isPlaying,\n    songIndex,\n    duration,\n    classTheme,\n    songRegion,\n  }\n\n  useEffect(() => {\n    const func = async () => {\n      if (firstLoading) {\n        setLoading(true);\n        await fetch(`${path}/${username}`)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data) \n          userDetail.current = data;\n          console.log(userDetail.current);\n          setUserIcon(data[0].avatar);\n          validated.current = true;\n        })\n        .catch(() => {validated.current = false;setLoading(false)})\n        if (validated.current){\n        await fetch(`${path}/${username}/songs`)\n          .then((response) => response.json())\n          .then((data) => {\n            if (data) setSongs(data);\n          })\n          .catch(() => {console.log(\"Cannot get user songs\");})\n          .finally(() => { setLoading(false); setFirstLoading(false); })\n        }\n      }\n    }\n    func();\n\n    console.log(\"Validated : \" + validated.current);\n  }, [songRegion, firstLoading])\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n    }\n  }, [volume, audioRef.current])\n\n\n  let classes;\n\n  const play = () => {\n    const audio = audioRef.current;\n    audio.play();\n  }\n\n  const pause = () => {\n    const audio = audioRef.current;\n    audio.pause();\n  }\n\n  if (isPlaying && audioRef.current) {\n    classes = \"player playing\";\n    play();\n  } else if (audioRef.current) {\n    classes = \"player\";\n    pause();\n  } else {\n    classes = \"player\";\n  }\n\n  const modifySrc = function (url) {\n    setSrc(url);\n  }\n\n  const modifyActiveRandom = function (param) {\n    setActiveRandom(param);\n  }\n\n  const modifyActiveRepeat = function (param) {\n    setActiveRepeat(param);\n  }\n\n  const modifyCdThumb = function (url) {\n    setCdThumb(url);\n  }\n\n  const modifySong = function (url) {\n    setSong(url);\n  }\n\n  const modifySinger = function (url) {\n    setSinger(url);\n  }\n\n  const modifyIsPlaying = function (isPlaying) {\n    setIsPlaying(!isPlaying);\n  }\n\n  const modifyPercentage = function (percentage) {\n    setPercentage(percentage);\n  }\n\n  const modifySongRegion = function (region) {\n    setSongIndex(0);\n    setSongRegion(region);\n  }\n\n  const modifySongPlay = function (index, isForced) {\n    if (songs) {\n      if (!isForced) {\n        if (activeRandom) {\n          index = Math.round(Math.random() * songs.length);\n        }\n        if (activeRepeat) {\n          index = songIndex;\n        }\n      }\n      if (songs[index]){\n      setSongIndex(index);\n      setTimeManually(0);\n      setPercentage(0);\n      modifySong(songs[index].name);\n      modifySinger(songs[index].singer);\n      modifySrc(songs[index].path);\n      modifyCdThumb(songs[index].image);\n      }\n    }\n  }\n\n  const modifySongState = {\n    modifyActiveRandom,\n    modifyActiveRepeat,\n  }\n\n  const songState = {\n    activeRandom,\n    activeRepeat\n  }\n\n  const modifyClassTheme = () => {\n    (classTheme === \"defualt-theme\") ? setClassTheme(\"custom-theme-01\") : ((classTheme === \"custom-theme-01\") ? setClassTheme(\"custom-theme-02\") : ((classTheme === \"custom-theme-02\") ? setClassTheme(\"custom-theme-03\") : setClassTheme(\"defualt-theme\")));\n  }\n\n  const updateTime = (e) => {\n    const _percentage = e.target.currentTime / duration * 100;\n    setPercentage(_percentage);\n    if (percentage === 100) {\n      if (songIndex === songs.length - 1)\n        modifySongPlay(0); else modifySongPlay(songIndex + 1);\n    }\n  }\n\n  const setTimeManually = (e) => {\n    audioRef.current.currentTime = e;\n  }\n\n  const handleSoftDelte = (index) => {\n    let newSongs = [...songs];\n    newSongs.splice(index, 1);\n    setSongs(newSongs);\n  }\n  \n  const handleAddSong = (song) => {\n    let newSongs = [...songs];\n    newSongs.push(song);\n    setSongs(newSongs);\n    setSongAdded(true);\n  }\n\n  useEffect(() =>{\n    if (songAdded){\n      modifySongPlay(songs.length-1, true);\n      setSongAdded(false);\n    }\n  }, [handleAddSong, songAdded])\n\n  const handleOnChangeVolume = (e) => {\n    setVolume(e.target.value);\n  }\n\n  const ModifySongVolume = (e) => {\n    switch (volume) {\n      case 0:\n        setVolume(0.4);\n        setVolumeBackground(\"volume-background-02\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.4:\n        setVolume(0.65);\n        setVolumeBackground(\"volume-background-03\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.65:\n        setVolume(0.8);\n        setVolumeBackground(\"volume-background-04\");\n        setVolumeIcon(\"fas fa-volume-down\");\n        break;\n      case 0.8:\n        setVolume(1);\n        setVolumeBackground(\"volume-background\");\n        setVolumeIcon(\"fas fa-volume-up\");\n        break;\n      case 1:\n        setVolume(0);\n        setVolumeBackground(\"volume-background-01\");\n        setVolumeIcon(\"fas fa-volume-mute\");\n        break;\n      default: alert(\"Sound Volume error\");\n    }\n  }\n\n  return (\n    <div className={`${classes} ${classTheme}`}>\n      {(loading === true) ? <Loading /> : (<>\n        <Dashboard userIcon={userIcon} validated={validated.current} username={username} songState={songState} volumeIcon={volumeIcon} volumeBackground={volumeBackground} ModifySongVolume={ModifySongVolume} modifyClassTheme={modifyClassTheme} modifySongRegion={modifySongRegion} modifySongState={modifySongState} songCount={songs.length} songDetail={songDetail} modifyIsPlaying={modifyIsPlaying} modifySongPlay={modifySongPlay} percentage={percentage} modifyPercentage={modifyPercentage} modifyCurruntTime={setTimeManually} songs={songs} />\n        <audio ref={audioRef} id=\"audio\" onTimeUpdate={(e) => updateTime(e)} src={src} onLoadedData={(e) => { setDuration(e.currentTarget.duration); }}></audio>\n        <Playlist userDetail={userDetail.current[0]} validated={validated.current} classTheme={classTheme} songRegion={songRegion} handleSoftDelte={handleSoftDelte} songIndex={songIndex} src={src} modifySongPlay={modifySongPlay} modifyIsPlaying={modifyIsPlaying} songs={songs} handleAddSong={handleAddSong}/>\n      </>)}\n    </div>\n  );\n}\n\nexport default Home;\n","import Home from './components/Home';\nimport HomeUser from './components/HomeUser';\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Routes>\n        <Route exact path=\"/\" element={<Home path=\"https://api-trunkeymusicplayer.herokuapp.com/api\"/>}/>\n        <Route path=\"/user/:username\" element={<HomeUser path=\"https://api-trunkeymusicplayer.herokuapp.com/api/user\"/>}/>\n      </Routes>\n    </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}